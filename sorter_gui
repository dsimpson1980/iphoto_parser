import sys
import os
import logging
from PyQt4 import QtGui, QtCore

import sorter


class SorterGUI(QtGui.QMainWindow):

    def __init__(self):
        super(SorterGUI, self).__init__()
        self.initUI()

    def initUI(self):

        self.setToolTip('This is a <b>QWidget</b> widget')
        self.setCentralWidget(MyWidget())
        self.setGeometry(300, 300, 600, 150)
        self.setWindowTitle('Tooltips')
        self.show()


class MyWidget(QtGui.QWidget):
    def __init__(self):
        source_path = os.path.expanduser('~/Pictures/iPhoto Library.photolibrary')
        target_dir = os.path.expanduser('~/Pictures/parser_output')

        QtGui.QWidget.__init__(self)
        self.source_qle = QtGui.QLineEdit(self)
        self.source_qle.setText(source_path)
        source_btn = QtGui.QPushButton('Source', self)
        source_btn.setToolTip('Select an iphoto library to parse')
        source_btn.resize(source_btn.sizeHint())
        source_btn.clicked.connect(self.select_lib)
        source_hbox = QtGui.QHBoxLayout()
        source_hbox.stretch(1)
        source_hbox.addWidget(source_btn)
        source_hbox.addWidget(self.source_qle)

        self.target_qle = QtGui.QLineEdit(self)
        self.target_qle.setText(target_dir)
        target_btn = QtGui.QPushButton('Target', self)
        target_btn.setToolTip('Select target directory')
        target_btn.resize(target_btn.sizeHint())
        target_btn.clicked.connect(self.select_target)
        target_hbox = QtGui.QHBoxLayout()
        target_hbox.addWidget(target_btn)
        target_hbox.addWidget(self.target_qle)

        parse_btn = QtGui.QPushButton('Parse!', self)
        parse_btn.setToolTip('Parse selected iphoto library')
        parse_btn.resize(parse_btn.sizeHint())
        parse_btn.clicked.connect(self.parse_lib)

        quit_btn = QtGui.QPushButton('Quit', self)
        quit_btn.setToolTip('Quit iphoto parser')
        quit_btn.resize(quit_btn.sizeHint())
        quit_btn.clicked.connect(QtCore.QCoreApplication.instance().quit)

        vbox = QtGui.QVBoxLayout()
        vbox.addStretch(1)
        vbox.addLayout(source_hbox)
        vbox.addLayout(target_hbox)
        hbox = QtGui.QHBoxLayout()
        hbox.addWidget(parse_btn)
        hbox.addWidget(quit_btn)
        vbox.addLayout(hbox)
        self.setLayout(vbox)

    def parse_lib(self):
        sorter.parse_files(self.source_path, self.target_dir)

    def select_lib(self):
        filepath = QtGui.QFileDialog.getOpenFileName(
            self, 'Open file', self.source_qle.text())
        self.source_qle.setText(filepath)
        logging.info('Set libpath to %s', self.source_qle.text())

    def select_target(self):
        dirpath = QtGui.QFileDialog.getExistingDirectory(
            self, 'Select USB Drive Location', self.target_qle.text())
        self.target_qle.setText(dirpath)
        logging.info('Set target directory to %s', self.source_qle.text())


def MainWindow(app):
    sys.exit(app.exec_())


def main():
    app = QtGui.QApplication(sys.argv)
    sorter_gui = SorterGUI()
    MainWindow(app)

if __name__ == '__main__':
    logging.basicConfig(level='INFO')
    main()